---
title: "Data Science Lab"
---

:::{.callout-important collapse=false appearance='default' icon=true}
## Developing Syllabus
This syllabus may change during the course of the semester additions and clarifications.  
All substantial changes will marked here with date. 

[Important Links:]{style='color:red;'}    
GitHub organization of the course:  <https://github.com/CU-S24-MSDSSB-DSCI-01-DataScienceLab>   
Course Organization repository with non-public information:  <https://github.com/CU-S24-MSDSSB-DSCI-01-DataScienceLab/Course-Organization>
:::

## Module Names

MDSSSB-DSCI-01 Data Science Lab (Discovery area, 5 credits)

Offered in the [Master program: Data Science for Society and Business (DSSB)](https://constructor.university/programs/graduate-education/data-science-for-society-business). See the module description in the [DSSB Handbook](https://constructor.university/sites/default/files/2023-09/DSSB_MSc_Handbook_16-08-2023_Track%20changes%20.pdf). 


## Module Components

- Data Science Lab (5 Credits)

Pre-requisits 

- Data Science Concepts
- Data Science Tools 
- Current Topics and Applications in Data Science


## Class Meeting Information

Thursday: 2 consecutive Sessions  **15:45-17:00** and **17:15-18:30**    
Location: **East Hall Seminar Room 2** in-person  

Asynchronous communication about course organization as well as occasional video streaming and recording will be done in Microsoft Teams:   
Team **S24_MDSSB-DSCI-01_Data Science Lab**, General Channel


## Instructor

[**Jan Lorenz**](http://janlo.de) Email: <jlorenz@constructor.univeristy>


## Format and Workload

**Lab sessions** (35 hours in presence)

**Work on project** (125 hours)


## Intended Learning Outcomes

From the handbook: By the end of this module, students should be able to

1. understand and critically evaluate current data science applications, identify new and innovative research questions and data science applications
2. experiment with and simulate data science solutions
3. write/configure computer programs/tools specific to certain subject areas
4. master relevant data pre/post-processing routines
5. design and schedule a DS project of medium complexity, including escape options, and keep milestones/timelines
6. improve their academic writing skills
7. communicate results to a non-expert audience
8. design their own digital application

### Main Learning Goal

This Data Science Lab shall deepen your skills for your more and more independent data science work based on a **self-designed project**. That means you **become more experienced** in

- in using the core concepts in data science on your own, for example
    - exploring data (import, wrangle, visualize)
    - learning, exploring and applying *mathematics* and *statistics* through the data science lens
    - learning and applying concepts to model and draw conclusions from data (model, infer, predict)
- **creating and maintaining a digital working environment on your computer to do data science**
- programming in the data science languages R and/or python, and become able to learn new skills in these independently

## Examination and Assessment

Assessment Type: **Project Assessment**   
Weight: 100%   
Scope: All intended learning outcomes of the module.  
Completion: to pass this module, the examination has to be passed with at least 45%  

The project components must be delivered in a non-public **project-repository** on **GitHub** provided by the instructor in the GitHub-Organization  [CU-S24-MSDSSB-DSCI-01-DataScienceLab](https://github.com/CU-S24-MSDSSB-DSCI-01-DataScienceLab). If your project requires another way of delivery, get in contact with the instructor before the submission.


## Module Policies

There are no formal requirement about attendance and active participation. However, we rely on your **engagement** in a many-facted way including: 

* Preparation (looking at readings and material before and after class, being informed about syllabus and course material)
* Focus (avoid distraction during in class and self-learning activities)
* Presence (listening and responding during group activities)
* Asking questions (in class, out of class, online, offline, when you get stuck conclude by writing a question)
* Specificity (being as specific as possible when describing your problem or question)
* Synthesizing (making connections between concepts from reading and discussion)
* Persistence (you don't need to understand everything immediately, but stay engaged, try again, confusion shows that you pay attention)

## Academic Integrity
All involved parties (professors and lecturers, instructors and students) are expected to abide by the word and spirit of the "Code of Academic Integrity": 
<https://constructor.university/student-life/student-services/university-policies/academic-policies/code-of-academic-integrity>. Violations of the Code might be brought to the attention of the Academic Integrity Committee.

## Artifical Intelligence (AI) Use Policy

This policy covers any generative AI tool, such as ChatGPT, Elicit, etc. This includes text, code, slides, artwork/graphics/video/audio and other products.

I encourage you to using and exploring AI tools for these purposes: 

  - **Learning by dialog with a chatbot.** AI chatbots can be helpful to explain you concepts *on your desired level* and get a feeling about how certain topics are treated. You can ask for an easier or more detailed explanation or focus on certain aspects. Note: The capabilities are limited and you likely receive a lot of false information! Using chatbots should remain a small part of your learning process. Rule of thumb: Spend not more than 25% of the learning time with chatting. There is no way around reading textbooks, reading software documentation, learning and understanding concepts, searching for help online, asking instructors or fellow students.
  - **Have code snippets written.** Tools like GitHub Copilot (free to use for students and teachers) are heavily used and currently change code-writing. They can speed up writing your code. However, they do not deliver always correct solutions. There is no way around understanding yourself what a code is doing! Do not spend endless hours asking for new code with new prompts, spend time understanding a language and the functions and objects you are using! Copilots can be a great help to get a skeleton of code and an idea how your solution *might* look, they rarely deliver the complete code. Expect that the code does not work, expect that the code seems to works but the results are wrong. You are 100% accountable for the code you produce, with or without the help of a copilot!
  - **Have a draft text snippet written.** Data science is also about formulating and describing research questions, describing data, documenting code, interpreting results, and deriving conclusion form the results. This is all verbal text and chatbots are good in writing text which often appears well readable. You can use this to inspire yourself and to polish and improve your texts. However, you are 100% accountable for the text you deliver. You are expected to know what your text is about and to be able to answer questions about what your text means! In text generated purely by a chatbot it is often evident that you do not. We consider such cases worse than incomplete but sensible text. Also text written by chatbots is often very generic and less specific. In general, we value more specific text higher than generic text. Large parts of very generic text is considered worse than a shorter more specific text. In extreme case, a long very generic text will be considered worse than no text at all
  - Note: **Philosophical and legal questions around the training and use of chatbots and code copilots are controversially contested and re-examined constantly!** We encourage to engage with such questions and become aware of arguments and debates.

If any part of this AI policy is confusing or uncertain, please reach out to us for a conversation before submitting your work.

## Schedule

The [**Schedule**](schedule.qmd) is on an extra page and will be updated continuously. 

Detailed schedule information with personalized student information will appear in the private repository <https://github.com/CU-S24-MSDSSB-DSCI-01-DataScienceLab/Course-Organization>



## Feedback from Students

We are eager to constantly improve the quality of our teaching. We would be glad to obtain your feedback at any time of the course to improve your learning experience.